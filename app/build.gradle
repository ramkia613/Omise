apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"


androidExtensions {
    experimental = true
}
android {

    compileSdkVersion compileSdkVer

    defaultConfig {
        applicationId appPackageName
        minSdkVersion minSdkVer
        targetSdkVersion targetSdkVer
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        //TODO: Replace with your server IP or url
        buildConfigField "String", "BASE_URL", "\"http://192.168.1.104:8080/\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    ndkVersion = '21.0.6113669'

}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    //app
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.cardview:cardview:$cardviewVersion"

    implementation 'androidx.preference:preference:1.0.0'
    implementation "com.therahulmeena.kryptoscope:kryptoscope:$stethoCryptoVersion"

    // arch components
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$archCompVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archCompVersion"

    //kotlin
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutineVersion"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutineVersion"

    // navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navCompVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navCompVersion"

    // ktx
    implementation "androidx.core:core-ktx:$ktxCoreVersion"

    //dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$loggingVersion"

    //glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // Omise SDK
    implementation "co.omise:omise-android:$omiseVersion"

    // test
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptTest "com.google.dagger:dagger-android-processor:$daggerVersion"

    // test
    testImplementation "junit:junit:$junitVersion"
    testImplementation("org.robolectric:robolectric:$robolectricVersion") {
        exclude module: 'support-v4'
        exclude group: 'junit'
    }
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"

    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.ext:junit:$testVersion"
    androidTestImplementation "androidx.test:rules:$testVersion"
    androidTestImplementation "androidx.test:runner:$testVersion"


}
